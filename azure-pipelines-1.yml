trigger:
- none

pool: 
  name: TC_811

parameters:
- name: VM_Environment_Name
  displayName: 'VM Environment Name'
  type: string
  values:
  - TEST1
  - TEST2
  - TEST3
  default: TEST1
- name: Destination_Machine_Name
  displayName: 'Destination Machine Name'
  type: string
  values:
  - DENBG0817VM
  - DENBG0811VM
  default: DENBG0817VM

variables:
  dcusername: 'dcadmin'
  dcpassword: 'dcadmin'
  DC_QUICK_DEPLOY_PATH: '/opt/app/siemens/dc_14.1/deployment_center/additional_tools/internal/dc_quick_deploy'
  DC_URL: 'http://192.168.80.54:8080/deploymentcenter'
  DC_DEPLOY_SCRIPT_DIR_NAME: 'deploy'
  JAVA_HOME: '/opt/app/siemens/JAVA/jdk-11.0.21'
  TARGET_VM_DEPLOY_SCRIPTS_DIR: '/opt/app/siemens'
  TARGET_VM_MAPPED_DRIVE_BACK_TO_DC_REPO: '/opt/app/siemens/dc_14.1/repository/deploy_scripts'
  TARGET_VM_SOFTWARE_LOCATION: '/mnt/dumps/TC/TC14' 
  INPUT_FILE_PATH: '/opt/app/siemens/Sample_xml_Files/LS24_install_Fnd140.xml'
  BUILD_NO: $(Build.BuildNumber)
  BUILD_NUMBER: ${BUILD_NO//./_}
  SCRIPTS_DIR_NAME: $(DC_DEPLOY_SCRIPT_DIR_NAME)_$(BUILD_NUMBER)
  
stages:
- stage: Prepare
  jobs:
  - job: Prepare_Azure_Variables
    pool:
      name: TC_811
    steps:
    - script: |
        # Setting the specified variables
        
        target_vm_machine_name='${{ parameters.Destination_Machine_Name }}' 
        dcEnvironmentName='${{ parameters.VM_Environment_Name }}_$(Build.BuildNumber)'
        machine_script_dir_name='deploy_'$target_vm_machine_name
        machine_script_zip_name=$machine_script_dir_name.zip
        scripts_dir_name='$(DC_DEPLOY_SCRIPT_DIR_NAME)_$(Build.BuildNumber)'
        machine_script_path=$(TARGET_VM_MAPPED_DRIVE_BACK_TO_DC_REPO)/$dcEnvironmentName/install/$scripts_dir_name/$machine_script_zip_name
        unzip_target_path=$(TARGET_VM_DEPLOY_SCRIPTS_DIR)/$scripts_dir_name/$machine_script_dir_name
        
      displayName: 'Prepare Azure Variables'

- stage: Generate_Deploy_Script
  jobs:
  - job: Generate
    pool:
      name: TC_811
    steps:
    - script: |
    
        TARGET_VM_MACHINE_NAME='${{ parameters.Destination_Machine_Name }}'
        DC_ENV_NAME=${{ parameters.VM_Environment_Name }}_$(BUILD_NUMBER)
        echo "Generating Deploy script using Quick Deploy"
        cd $(DC_QUICK_DEPLOY_PATH) && ./dc_quick_deploy.sh -dcurl=$(DC_URL) -environment=$DC_ENV_NAME -inputFile=$(INPUT_FILE_PATH) -dcusername=$(dcusername) -dcpassword=$(dcpassword) -scriptDirectoryName=$(SCRIPTS_DIR_NAME) -machine=$TARGET_VM_MACHINE_NAME
      displayName: 'Generate Deploy Script'

- stage: Copy_Deploy_Script
  jobs:
  - job: Copy
    pool:
      name: TC_811  
    steps:
    - script: |
        DC_ENV_NAME=${{ parameters.VM_Environment_Name }}_$(BUILD_NUMBER)
        TARGET_VM_MACHINE_NAME='${{ parameters.Destination_Machine_Name }}'
        MACHINE_SCRIPT_DIR_NAME='deploy_'$TARGET_VM_MACHINE_NAME
        MACHINE_SCRIPT_ZIP_NAME=$MACHINE_SCRIPT_DIR_NAME.zip
        echo "Packaging files for deployment"
        mkdir -p $(Build.ArtifactStagingDirectory)/$MACHINE_SCRIPT_DIR_NAME
        cp -r $(TARGET_VM_MAPPED_DRIVE_BACK_TO_DC_REPO)/$DC_ENV_NAME/install/$(SCRIPTS_DIR_NAME)/* $(Build.ArtifactStagingDirectory)/$MACHINE_SCRIPT_DIR_NAME/
      displayName: 'Prepare files for artifact'

    - publish: $(Build.ArtifactStagingDirectory)/$MACHINE_SCRIPT_DIR_NAME
      artifact: Deploy_Scripts_Artifact
      displayName: 'Publish Deployment Scripts as Artifact'

- stage: Unzip_Deploy_Script
  jobs:
  - job: Unzip
    pool:
      name: TC_817  # The pool for the destination VM agent
    steps:
    - download: current
      artifact: Deploy_Scripts_Artifact
      displayName: 'Download Deployment Scripts Artifact'

    - script: |
        echo "Files downloaded to $(Pipeline.Workspace)/Deploy_Scripts_Artifact"
        ls $(Pipeline.Workspace)/Deploy_Scripts_Artifact
        TARGET_VM_MACHINE_NAME='${{ parameters.Destination_Machine_Name }}'
        MACHINE_SCRIPT_DIR_NAME='deploy_'$TARGET_VM_MACHINE_NAME
        echo "Unzipping files"
        unzip $(Pipeline.Workspace)/Deploy_Scripts_Artifact/$MACHINE_SCRIPT_ZIP_NAME -d $(TARGET_VM_DEPLOY_SCRIPTS_DIR)/$(SCRIPTS_DIR_NAME)/$MACHINE_SCRIPT_DIR_NAME
      displayName: 'Unzip Files on Destination Server'
      
- stage: Execute_Deploy_Script
  jobs:
  - job: Execute
    pool:
      name: TC_817
    steps:
    - script: |
        TARGET_VM_MACHINE_NAME='${{ parameters.Destination_Machine_Name }}'
        MACHINE_SCRIPT_DIR_NAME='deploy_'$TARGET_VM_MACHINE_NAME
        echo "Executing deploy script"
        cd $(TARGET_VM_DEPLOY_SCRIPTS_DIR)/$(SCRIPTS_DIR_NAME)/$MACHINE_SCRIPT_DIR_NAME && ./deploy.sh -softwareLocation=$(TARGET_VM_SOFTWARE_LOCATION) -dcusername=$(dcusername) -dcpassword=$(dcpassword)
      displayName: 'Execute deploy script in Destination Server'  

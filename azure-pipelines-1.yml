trigger:
- none

pool: 
  name: TC_811

parameters:
- name: VM_Environment_Name
  displayName: 'VM Environment Name'
  type: string
  values:
  - TEST1
  - TEST2
  - TEST3
  default: TEST1
- name: Destination_Machine_Name
  displayName: 'Destination Machine Name'
  type: string
  values:
  - DENBG0817VM
  - DENBG0811VM
  default: DENBG0817VM

variables:
  dcusername: 'dcadmin'
  dcpassword: 'dcadmin'
  DC_QUICK_DEPLOY_PATH: '/opt/app/siemens/dc_14.1/deployment_center/additional_tools/internal/dc_quick_deploy'
  DC_URL: 'http://192.168.80.54:8080/deploymentcenter'
  DC_DEPLOY_SCRIPT_DIR_NAME: 'deploy'
  JAVA_HOME: '/opt/app/siemens/JAVA/jdk-11.0.21'
  TARGET_VM_DEPLOY_SCRIPTS_DIR: '/opt/app/siemens'
  TARGET_VM_MAPPED_DRIVE_BACK_TO_DC_REPO: '/opt/app/siemens/dc_14.1/repository/deploy_scripts'
  TARGET_VM_SOFTWARE_LOCATION: '/mnt/dumps/TC/TC14'
  INPUT_FILE_PATH: '/opt/app/siemens/Sample_xml_Files/test_install_Fnd140.xml'

stages:
- stage: Set_Build_Variables
  jobs:
  - job: Set_Build_Variables
    pool:
      name: TC_811
    steps:
    - script: |
        echo "Setting up Build Variables..."
        BUILD_NUMBER=$(echo $(Build.BuildNumber) | sed 's/\./_/g')
        echo "Build Number: $BUILD_NUMBER"
        echo "##vso[task.setvariable variable=BUILD_NUMBER]$BUILD_NUMBER"
        
        DC_ENV_NAME="${{ parameters.VM_Environment_Name }}_$BUILD_NUMBER"
        echo "DC Environment Name: $DC_ENV_NAME"
        echo "##vso[task.setvariable variable=DC_ENV_NAME]$DC_ENV_NAME"
        
        SCRIPTS_DIR_NAME="${{ variables.DC_DEPLOY_SCRIPT_DIR_NAME }}_$BUILD_NUMBER"
        echo "Scripts Directory Name: $SCRIPTS_DIR_NAME"
        echo "##vso[task.setvariable variable=SCRIPTS_DIR_NAME]$SCRIPTS_DIR_NAME"
        
        MACHINE_SCRIPT_DIR_NAME="deploy_${{ parameters.Destination_Machine_Name }}"
        echo "Machine Script Directory Name: $MACHINE_SCRIPT_DIR_NAME"
        echo "##vso[task.setvariable variable=MACHINE_SCRIPT_DIR_NAME]$MACHINE_SCRIPT_DIR_NAME"
        
        MACHINE_SCRIPT_ZIP_NAME="deploy_${{ parameters.Destination_Machine_Name }}.zip"
        echo "Machine Script Zip Name: $MACHINE_SCRIPT_ZIP_NAME"
        echo "##vso[task.setvariable variable=MACHINE_SCRIPT_ZIP_NAME]$MACHINE_SCRIPT_ZIP_NAME"
      displayName: 'Set Build Variables'

- stage: DECLARATION
  dependsOn: Set_Build_Variables
  jobs:
  - job: Verify_Parameters
    pool:
      name: TC_811
    steps:
    - script: |
        echo "Creating New DC Environment: $(DC_ENV_NAME)"
        echo "On VM: ${{ parameters.Destination_Machine_Name }}"
        echo "Using Quick Deploy file: ${{ variables.INPUT_FILE_PATH }}"
        echo "Installing TC Foundation 14.0 on VM: ${{ parameters.Destination_Machine_Name }}"
      displayName: 'Verify Selected Parameters'

- stage: Generate_Deploy_Script
  dependsOn: DECLARATION
  jobs:
  - job: Generate
    pool:
      name: TC_811
    steps:
    - script: |
        echo "Generating Deploy script using Quick Deploy"
        cd ${{ variables.DC_QUICK_DEPLOY_PATH }}
        ./dc_quick_deploy.sh -dcurl=${{ variables.DC_URL }} -environment=$(DC_ENV_NAME) -inputFile=${{ variables.INPUT_FILE_PATH }} -dcusername=${{ variables.dcusername }} -dcpassword=${{ variables.dcpassword }} -scriptDirectoryName=$(SCRIPTS_DIR_NAME) -machine=${{ parameters.Destination_Machine_Name }}
      displayName: 'Generate Deploy Script'

- stage: Copy_Deploy_Script
  dependsOn: Generate_Deploy_Script
  jobs:
  - job: Copy
    pool:
      name: TC_811
    steps:
    - script: |
        echo "Copying files to the destination server"
        scp -r ${{ variables.TARGET_VM_MAPPED_DRIVE_BACK_TO_DC_REPO }}/$(DC_ENV_NAME)/install/$(SCRIPTS_DIR_NAME) infodba@192.168.80.108:${{ variables.TARGET_VM_DEPLOY_SCRIPTS_DIR }}
      displayName: 'Copy Files to Destination Server'

- stage: Unzip_Deploy_Script
  dependsOn: Copy_Deploy_Script
  jobs:
  - job: Unzip
    pool:
      name: TC_811
    steps:
    - script: |
        echo "Unzipping files on the destination server"
        ssh -T -o StrictHostKeyChecking=no infodba@192.168.80.108 unzip ${{ variables.TARGET_VM_DEPLOY_SCRIPTS_DIR }}/$(SCRIPTS_DIR_NAME)/$(MACHINE_SCRIPT_ZIP_NAME) -d ${{ variables.TARGET_VM_DEPLOY_SCRIPTS_DIR }}/$(SCRIPTS_DIR_NAME)/$(MACHINE_SCRIPT_DIR_NAME)
      displayName: 'Unzip Files on Destination Server'

- stage: Execute_Deploy_Script
  dependsOn: Unzip_Deploy_Script
  jobs:
  - job: Execute
    pool:
      name: TC_811
    steps:
    - script: |
        echo "Executing deploy script on the destination server"
        FULL_COMMAND="cd ${{ variables.TARGET_VM_DEPLOY_SCRIPTS_DIR }}/$(SCRIPTS_DIR_NAME)/$(MACHINE_SCRIPT_DIR_NAME) && ./deploy.sh -softwareLocation=${{ variables.TARGET_VM_SOFTWARE_LOCATION }} -dcusername=${{ variables.dcusername }} -dcpassword=${{ variables.dcpassword }}"
        echo "Executing command: $FULL_COMMAND"
        ssh -T -o StrictHostKeyChecking=no infodba@192.168.80.108 "$FULL_COMMAND"
      displayName: 'Execute deploy script on Destination Server'
